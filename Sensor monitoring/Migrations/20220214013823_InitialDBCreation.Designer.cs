// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sensor_monitoring.Models;

namespace Sensor_monitoring.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220214013823_InitialDBCreation")]
    partial class InitialDBCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sensor_monitoring.Models.Building", b =>
                {
                    b.Property<int>("BuildingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuildingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BuildingID");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("Sensor_monitoring.Models.Readings", b =>
                {
                    b.Property<int>("ReadingsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ReadingValue")
                        .HasColumnType("float");

                    b.Property<int?>("SensorID")
                        .HasColumnType("int");

                    b.HasKey("ReadingsID");

                    b.HasIndex("SensorID");

                    b.ToTable("Readings");
                });

            modelBuilder.Entity("Sensor_monitoring.Models.Sensor", b =>
                {
                    b.Property<int>("SensorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BuildingID")
                        .HasColumnType("int");

                    b.Property<string>("SensorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SensorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SensorType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SensorID");

                    b.HasIndex("BuildingID");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("Sensor_monitoring.Models.Readings", b =>
                {
                    b.HasOne("Sensor_monitoring.Models.Sensor", "Sensor")
                        .WithMany("Readings")
                        .HasForeignKey("SensorID");

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("Sensor_monitoring.Models.Sensor", b =>
                {
                    b.HasOne("Sensor_monitoring.Models.Building", "Building")
                        .WithMany("Sensors")
                        .HasForeignKey("BuildingID");

                    b.Navigation("Building");
                });

            modelBuilder.Entity("Sensor_monitoring.Models.Building", b =>
                {
                    b.Navigation("Sensors");
                });

            modelBuilder.Entity("Sensor_monitoring.Models.Sensor", b =>
                {
                    b.Navigation("Readings");
                });
#pragma warning restore 612, 618
        }
    }
}
